
def NEWS_API_KEY = '"' + NewsApiKey + '"'

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "com.gauravgoyal.mvvm_with_testing"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "NewsApiKey", NEWS_API_KEY
        multiDexEnabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    kapt {
        generateStubs = true
    }
}

dependencies {

    //networking
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson

    //dagger 2
    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support, { exclude group: 'com.android.support' }
    kapt deps.dagger.compiler
    kapt deps.dagger.android_support_compiler
    annotationProcessor deps.dagger.compiler

    // Support libraries
    implementation deps.support.app_compat
    implementation deps.support.fragment_runtime_ktx, { exclude group: 'androidx.core:core:1.1.0-rc01'}

    implementation deps.support.design

    // Architecture components
    implementation deps.lifecycle.runtime
    kapt deps.lifecycle.compiler
    implementation deps.room.runtime
    kapt deps.room.compiler
    implementation deps.room.rxjava2
    implementation deps.lifecycle.extensions

    // RxJava
    implementation deps.rx_android
    implementation deps.rxjava2

    // Kotlin
    implementation deps.kotlin.stdlib

    // Dependencies for local unit tests
    testImplementation deps.junit
    testImplementation deps.mockito.all
    testImplementation deps.hamcrest
    testImplementation deps.arch_core.testing
    testImplementation deps.kotlin.stdlib
    testImplementation deps.kotlin.test

    // Android Testing Support Library's runner and rules
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.atsl.rules
    androidTestImplementation deps.room.testing
    androidTestImplementation deps.arch_core.testing

    // Dependencies for Android unit tests
    androidTestImplementation deps.junit
    androidTestImplementation deps.mockito.core, { exclude group: 'net.bytebuddy' }
    androidTestImplementation deps.dexmaker

    // Espresso UI Testing
    androidTestImplementation deps.espresso.core
    androidTestImplementation deps.espresso.contrib
    androidTestImplementation deps.espresso.intents

    // Resolve conflicts between main and test APK:
    androidTestImplementation deps.support.annotations
    androidTestImplementation deps.support.app_compat
    androidTestImplementation deps.support.design

}
